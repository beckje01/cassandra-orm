

h3. Person

{code}
class User
{
    String username
    String emailAddress
    String firstName
    String lastName
    String address
    String city
    String state
    String zip
    String country
    String phone
    Gender gender
    Date birthDate

    List posts
    static hasMany = [posts: Post]

    static cassandraMapping = [
            primaryKey: 'username',
            explicitIndexes: ["emailAddress", "phone", 'birthDate', ["country","state","city"]],
            secondaryIndexes: ["gender","country", "state"],
            counters: [
                    [groupBy: ['birthDate']],
                    [groupBy: ['gender']],
                    [groupBy: ['country','state','city','gender']],
                    [findBy:  ['country','state'], groupBy:['city','gender']]
            ]
    ]
}
{code}

h3. Post

{code}
class Post
{
	UUID uuid
	String text
	Date occurTime

	Person person
	static belongsTo = [person: Person]

	List comments
	Set likedBy
	static hasMany = [comments: Comment, likedBy: Person]

	static cassandraMapping = [
			primaryKey: 'uuid',
			counters: [
					[groupBy: ['occurTime']]
			],
			keySpace: "demo"
	]


	Boolean isLikedBy(person)
	{
		likedByCount(start:person.id, finish:person.id) > 0
	}
}
{code}

h3. Comment

{code}
class Comment
{
	UUID uuid
	String text
	Date occurTime
	Person person
	Post post
	static belongsTo = [post: Post]

	Set likedBy
	static hasMany = [likedBy: Person]

	static cassandraMapping = [
			primaryKey: 'uuid',
			counters: [
					[findBy: ['post'], groupBy:['occurTime']],
					[findBy: ['person'], groupBy:['occurTime']]
			],
			keySpace: "demo"
	]

	Boolean isLikedBy(person)
	{
		likedByCount(start:person.id, finish:person.id) > 0
	}
}
{code}


